# optional. may be specified as command line argument
mount_dir: /home/hrn/mnt/tgmount1
# client settings
client:
  session: tgfs
  api_id: 123
  api_hash: deadbeed121212121
# caches
caches:
  # will instantiate a single in memory cache
  memory1:
    type: memory
    capacity: 50MB
    block_size: 128KB
# every source is a separate get_messages request
message_sources:
  tmtc:
    entity: tgmounttestingchannel
    # filter: InputMessagesFilterMusic
  ru2chmu:
    entity: ru2chmu
    limit: 500
    reverse: False
    updates: True
ogranized: &ogranized
  filter: { filter: [OnlyUniqueDocs], recursive: True }
  docs:
    filter:
      - MessageWithOtherDocument
      - Not:
          - ByExtension: .zip
  audio:
    music:
      filter: MessageWithMusic
    voices:
      filter: MessageWithVoice
  music:
    filter: MessageWithMusic
  unpacked:
    filter: MessageWithZip
    cache: memory1
    wrappers:
      - ZipsAsDirs:
          recursive: True
          skip_folder_if_single_subfolder: True
          hide_sources: True
  zips:
    filter: MessageWithZip
  personal:
    filter:
      Union: [MessageWithKruzhochek, MessageWithVoice]
  video:
    filter: MessageWithVideoFile
  images:
    filter:
      Union: [MessageWithDocumentImage, MessageWithCompressedPhoto]
  stickers:
    filter:
      Union: [MessageWithAnimated, MessageWithSticker]
  all:
    filter: All
  music-by-performer:
    filter:
      - MessageWithMusic
      # - Last: 30
    producer:
      MusicByPerformer: { minimum: 2 }
# root
root:
  ru2chmu:
    source: { source: ru2chmu, recursive: True }
    <<: *ogranized
    by-sender:
      filter: All
      producer:
        MessageBySender:
          minimum: 2
          sender_root:
            <<: *ogranized
            wrappers: ExcludeEmptyDirs
  tmtc:
    source: { source: tmtc, recursive: True }
    <<: *ogranized
