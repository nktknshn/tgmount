# optional. may be specified as command line argument
mount_dir: /home/hrn/mnt/tgmount1
# client settings
client:
  session: tgfs
  api_id: 123
  api_hash: deadbeed121212121
# caches
caches:
  # will instantiate a single in memory cache
  memory1:
    type: memory
    capacity: 50MB
    block_size: 128KB
# every source is a separate get_messages request
message_sources:
  tmtc:
    entity: tgmounttestingchannel
    # filter: InputMessagesFilterMusic
  ru2chmu:
    entity: ru2chmu
    limit: 500
    reverse: False
    updates: True
# dir content wrappers
wrappers:
  zip1:
    type: zips_as_dirs
    recursive: True
    # skip_folder_if_single_subfolder: True
    hide_sources: True
# root
root:
  ru2chmu:
    source: { source: ru2chmu, recursive: True }
    audio:
      music:
        filter: MessageWithMusic
      voices:
        filter: MessageWithVoice
    visual:
      filter:
        OnlyUniqueDocs:
          picker: first
        ByTypes:
          [
            MessageWithCompressedPhoto,
            MessageWithDocumentImage,
            MessageWithVideoCompressed,
          ]
    all:
      source: ru2chmu
  tmtc:
    source: { source: tmtc, recursive: True }
    filter: { filter: [OnlyUniqueDocs], recursive: True }
    docs:
      filter: MessageWithOtherDocument
    zips:
      filter:
        - MessageWithZip
    unpacked:
      filter: MessageWithZip
      cache: memory1
      wrappers: zip1
    all1:
      filter:
        OnlyUniqueDocs: { picker: first }
    all2:
      filter:
        OnlyUniqueDocs: { picker: last }
    last10:
      filter:
        - MessageWithMusic
        - Last: 10
    music:
      filter:
        - MessageWithMusic
    video:
      filter:
        - ByTypes: [MessageWithVideoCompressed, MessageWithMusic]
